---
<% # Add admin user with random password if it's not already there. -%>
<% # block is require to keep existing ccdb admin  and services password, or make a unique one. -%>
<% users = find("properties").fetch("uaa", {}).fetch("scim", {}).fetch("users", []) || [] -%>
<% admin_user = users.detect { |u| u.match("^admin\\|") } -%>
<% services_user = users.detect { |u| u.match("^services\\|") } -%>
<% users.unshift "admin|#{random_string 12, :admin}|scim.write,scim.read,openid,cloud_controller.admin" unless admin_user -%>
<% users << "services|#{random_string 12, :services}|scim.write,scim.read,openid,cloud_controller.admin" unless services_user -%>
<% services_userid, services_password = services_user.split("\|")[0..1] if services_user -%>
<% name = find("name") %>

# ENV variables for Yeti:
# $ export SERVICE_BROKER_URL=http://service-broker.<%= find("properties.system_domain") %>
# $ export SERVICE_BROKER_TOKEN=broker-token

name: <%= name.end_with?("-services") ? name : "#{name}-services" %>
director_uuid: <%= find("director_uuid") %>

releases:
- name: cf-services-release
  version: latest

compilation:
  workers: 6
  network: services1
  reuse_compilation_vms: true
  cloud_properties:
    instance_type: c1.medium
    availability_zone: <%= find('properties.template_only.aws.availability_zone') %>

update:
  canaries: 1
  canary_watch_time: 30000-600000
  update_watch_time: 30000-600000
  max_in_flight: 4
  max_errors: 1

networks:
- name: services1
  type: manual
  subnets:
  - range: 10.10.32.0/20
    name: default_unused
    reserved:
    - 10.10.32.2 - 10.10.32.9
    static:
    - 10.10.32.10 - 10.10.32.255
    gateway: 10.10.32.1
    dns:
    - 10.10.0.2  # amazon has only 1 DNS server for the whole VPC at x.x.0.2
    cloud_properties:
      security_groups:
      - cf
      subnet: <%= find('properties.template_only.aws.subnet_ids.services1') %>

resource_pools:
- name: services-small
  network: services1
  size: 3
  stemcell:
    name: bosh-stemcell
    version: latest
  cloud_properties:
    instance_type: m1.small
    availability_zone: <%= find('properties.template_only.aws.availability_zone') %>

jobs:
- name: rds_mysql_gateway
  release: cf-services-release
  template:
  - rds_mysql_gateway
  instances: 1
  resource_pool: services-small
  networks:
  - name: services1
  properties:
    uaa_client_id: "vmc"
    uaa_endpoint: https://uaa.<%= find("properties.system_domain") %>
    uaa_client_auth_credentials:
      username: <%= services_userid || "services" %>
      password: <%= services_password || random_string(12, :services) %>
    rds_mysql_gateway:
      token: <%= find("properties.rds_mysql_gateway.token") %>
      cc_api_version: v2
      check_orphan_interval: 7200
      supported_versions: ["n/a"]
      version_aliases:
        current: "n/a"

- name: mysql_node_10mb
  release: cf-services-release
  template:
  - mysql_node_external
  instances: 1
  resource_pool: services-small
  networks:
  - name: services1
    static_ips:
    - <%= ip( 1, 'services1.static') %>
  properties:
    mysql_node:
      plan: "10mb"
      external_dbs:
      - address: "<%= find("properties.mysql-service-public.address") %>"
        port: <%= find("properties.mysql-service-public.port") %>
        <%- role = find("properties.mysql-service-public.roles").detect{|hash| hash['tag'] == 'admin'} -%>
        user: "<%= role['name'] %>"
        password: "<%= role['password'] %>"

properties:
  template_only:
    <%= find("properties.template_only").to_yaml.split("\n")[1..-1].map{|line| " " * 4 + line}.join("\n").gsub(/\A\s{4}/, "") %>

  domain: <%= find("properties.domain") %>
  system_domain: <%= find("properties.system_domain") %>

  nats:
    user: <%= find("properties.nats.user") %>
    password: <%= find("properties.nats.password") %>
    address: 10.10.16.11  # <%#= ip( 1, 'cf1.static') %>
    port: 4222
    authorization_timeout: 5  # AWS is slow

  networks:
    services: services1

  cc: &cc
    srv_api_uri: https://api.<%= find("properties.system_domain") %>

  syslog_aggregator:
    address: 10.10.16.10
    port: 54321

  service_plans:
    rds_mysql:
      "10mb":
        unique_id: '78ad16cf-3c22-4427-a982-b9d35d746914'
        description: "Shared service instance, 10MB storage, 3 connections"
        extra: '{"cost":5.0,"bullets":[{"content":"10 MB storage"},{"content":"3 concurrent connections"},{"content":"Shared server"}]}'
        job_management:
          high_water: 1500
          low_water: 10
        configuration:
          capacity: 2000
          max_db_size: 10
          max_long_tx: 30
          max_clients: 3   # largest RDS instance defaults to 5800 connections max total
  uaa:
    <%= find("properties.uaa").to_yaml.split("\n")[1..-1].map{|line| " " * 4 + line}.join("\n").gsub(/\A\s{4}/, "") %>

